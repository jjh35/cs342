Work through the following materials this week, making sure that you can do the given activities. This unit is a more extended treatment of the material on database modeling covered in CS 262.

Read Chapter 3.
Compare and contrast the database and the software design processes. Are agile modeling practices applicable to database design as well?
Similarities: In both processes, requirements collection and analysis is a crucial starting point. In both processes, one will want to build
conceptual schemas using UML.
Differences: 
In implimenting a DB, an agile approach does not work as well. This is because a DB cannot be broken down into indepenent modules like software can. So,
a waterfall approach works better for DB development. 

Explain the following terms: entities, relationships (including cardinality and participation constraints), attributes (simple, composite, multi-valued and derived).
Entity: a thing or object in the real work with an independent existence.
relationships:a relationship type R among n entities types defines a set of associatetions or relationships sets among entities from thesese entity types
	Cardinality: the numbering of how many relationships an instance must participate in. One-to-One, one to many, many to many
	participation constraints:  Whether the existence of an entity depends on its being related to another entity via the relationship type. 
attributes: the particular propertiess that describe. 
	simple: attributes that cannot be divided (atomic)
	composite: can be divided into smaller subparts, wich represent more basic attributes with independent meaning.
	multi-valued: an attribute with more than one value.
	derived: an attribute that can be found using information from other attributes.


Explain weak entities and identifying relationships.
Weak entities: entity types that do not have a key attriutes of their own are called weak entities. Entities belonging to a weak entity type
are identified by being related to specific entities from another entity type in combination with one of their attribute values.
The relationship type that relates a weak entity type of its owner the identifying relationship of the weak entity type. 

Model a person-household database (from class 2) using an ERD.

Skim the material in Section 3.8 on UML diagrams; we won’t use it here but we have addressed it in CS 262 and will review it in unit 11.
Ok

Note the ERD reference sheet in Figure 3.14.

Read Chapter 9.
Map the ERD model from above to a relational database model.

Explain how to map from a UML model to a relational database model. We will address this issue more carefully in a later unit (on object-relational mapping).
Each Node can be mapped to an entity type. Each relashipship between the nodes can be mapped as a forign key relationship. The different properties
of the nodes can be fields in the DB. The methods from each node cannot be translated to a DB.